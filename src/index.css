/* src/index.css */
@tailwind base;
@tailwind components;
@tailwind utilities;

html {
    scroll-behavior: smooth;
}

body {
    @apply bg-dark-primary text-gray-200 font-sans;
}

.mask-gradient-top {
    mask-image: linear-gradient(to top, black 90%, transparent 100%);
    -webkit-mask-image: linear-gradient(to top, black 90%, transparent 100%);
}

details[open] .details-arrow {
    transform: rotate(180deg);
}

@layer components {
    .feature-scrollbar::-webkit-scrollbar {
        height: 8px;
    }

    .feature-scrollbar::-webkit-scrollbar-track {
        background-color: transparent;
    }

    .feature-scrollbar::-webkit-scrollbar-thumb {
        background-color: #4a5568;
        /* gray-600 */
        border-radius: 10px;
        border: 2px solid transparent;
        background-clip: content-box;
    }

    .feature-scrollbar::-webkit-scrollbar-thumb:hover {
        background-color: #718096;
        /* gray-500 */
    }

    .feature-scrollbar {
        scrollbar-width: thin;
        scrollbar-color: #4a5568 transparent;
    }
}

@layer utilities {
    .scroll-snap-stop-always {
        scroll-snap-stop: always;
    }
}

@media (max-height: 900px),
(max-width: 1023px) {
    .h-scroll-features {
        /* Force flex display and scrolling, overriding md:grid, lg:grid etc. */
        display: flex !important;
        overflow-x: auto !important;
        flex-wrap: nowrap !important;
        grid-template-columns: unset !important;
        grid-template-rows: unset !important;

        /* This ensures that the browser MUST snap to a card when scrolling stops. */
        scroll-snap-type: x mandatory;

        padding-left: calc(50% - 9rem);
        padding-right: calc(50% - 9rem);
    }

    .h-scroll-features>div {
        /* Ensure cards have a fixed width in the flex container */
        flex-shrink: 0 !important;
        width: 18rem !important;
        /* w-72 */
        cursor: pointer;

    }
}

/* Custom Swiper Styles */
.group:hover .swiper-button-next,
.group:hover .swiper-button-prev {
    opacity: 1;
}

.swiper-button-next,
.swiper-button-prev {
    color: white !important;
    background-color: rgba(0, 0, 0, 0.3);
    width: 44px !important;
    height: 44px !important;
    border-radius: 9999px;
    /* rounded-full */
    opacity: 0;
    transition: opacity 0.3s ease-in-out, background-color 0.2s ease-in-out;
}

.swiper-button-next:hover,
.swiper-button-prev:hover {
    background-color: rgba(0, 0, 0, 0.6);
}

.swiper-button-prev {
    left: 20px !important;
}

.swiper-button-next {
    right: 20px !important;
}

.swiper-button-next::after,
.swiper-button-prev::after {
    font-size: 1.25rem !important;
    /* text-xl */
}

.swiper-pagination-bullet {
    background: white !important;
    opacity: 0.5 !important;
    transition: opacity 0.2s ease-in-out, background-color 0.2s ease-in-out;
}

.swiper-pagination-bullet-active {
    background: theme('colors.brand-purple') !important;
    /* brand-purple */
    opacity: 1 !important;
}

.swiper-pagination-bullet:not(.swiper-pagination-bullet-active):hover {
    opacity: 0.8 !important;
}

/* Custom styles for FAQ content */
.prose p {
    margin-bottom: 1em;
    /* Add space below paragraphs */
    word-break: break-word;
    /* Ensure long words break and wrap */
    overflow-wrap: break-word;
    /* Alternative for word-break */
}

/* Adjust spacing for lists if they appear in FAQ answers */
.prose ul,
.prose ol {
    margin-bottom: 1em;
    padding-left: 1.5em;
    /* Ensure list items are indented */
}

.prose li {
    margin-bottom: 0.5em;
    /* Space between list items */
    word-break: break-word;
    /* Ensure long words break within list items */
    overflow-wrap: break-word;
    /* Alternative for word-break */
}

.prose-invert a {
    @apply text-brand-purple hover:underline;
}

/* Adjust spacing for headings within FAQ answers if they appear */
.prose h1,
.prose h2,
.prose h3,
.prose h4,
.prose h5,
.prose h6 {
    margin-top: 1.5em;
    /* Space above headings */
    margin-bottom: 0.5em;
    /* Space below headings */
}

/* Custom styles for inline code blocks */
.prose code {
    background-color: #374151;
    /* gray-700 */
    padding: 0.2em 0.4em;
    border-radius: 0.25rem;
    /* rounded-md */
    font-size: 0.875em;
    /* text-sm */
    color: #e5e7eb;
    /* gray-200 */
    overflow-wrap: break-word;
}

/*
  The default Tailwind prose plugin adds backticks around inline code.
  This rule removes them for a cleaner look.
*/
.prose code::before,
.prose code::after {
    content: none;
}